'use client'

import { usePathname } from 'next/navigation'
import {
	Select,
	SelectContent,
	SelectItem,
	SelectTrigger,
	SelectValue
} from '@/components/ui/select'
import {
	SelectItemIndicator,
	SelectItemText,
	SelectPortal,
	SelectViewport
} from '@radix-ui/react-select'
import { ComponentPropsWithoutRef } from 'react'
import { cn } from '@/lib/utils'

export const LOCALES = [
	{ key: 'ENGLISH', value: 'en', flag: 'üá¨üáß' },
	{ key: 'RUSSIAN', value: 'ru', flag: 'üá∑üá∫' }
	// { key: 'HEBREW', value: 'he', flag: 'üáÆüá±' }
] as const

type Props = {
	locale: string
} & ComponentPropsWithoutRef<'div'>

export const LanguageSelect = ({ className, locale }: Props) => {
	const pathname = usePathname()

	// –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å –∏–∑ –ø—É—Ç–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
	const pathWithoutLocale = pathname.replace(`/${locale}`, '') || '/'

	const handleLanguageChange = (newLocale: string) => {
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º window.location –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–º—ã
		window.location.href = `/${newLocale}${pathWithoutLocale}`
	}

	return (
		<div className={cn('shrink-0', className)}>
			<Select value={locale} onValueChange={handleLanguageChange}>
				<SelectTrigger className='h-8'>
					<SelectValue aria-label={locale}>
						{LOCALES.find(LOCALE => LOCALE.value === locale)?.flag}
					</SelectValue>
				</SelectTrigger>
				<SelectPortal>
					<SelectContent>
						<SelectViewport>
							{LOCALES.map(LOCALE => (
								<SelectItem value={LOCALE.value} key={LOCALE.key}>
									<SelectItemText>{LOCALE.key}</SelectItemText>
									<SelectItemIndicator>‚Ä¶</SelectItemIndicator>
								</SelectItem>
							))}
						</SelectViewport>
					</SelectContent>
				</SelectPortal>
			</Select>
		</div>
	)
}
